
#!/usr/bin/python

import etcd
import sys, string
from urlparse import urlparse

etcd_host = "{{ .Env.ETCD_HOST }}"
if not etcd_host:
    print "ETCD_HOST not set"
    sys.exit(1)

port = 4001
host = etcd_host

if ":" in etcd_host:
    host, port = etcd_host.split(":")

client = etcd.Client(host=host, port=int(port))

{{ $local := . }}
{{range $key, $value := .}}
{{ $addrLen := len $value.Addresses }}
{{ if eq $addrLen 1 }}
{{ with $address := index $value.Addresses 0 }}

{{ if $address.HostPort}}
# {{ $value.Name }}

container_name = "{{ $value.Name }}"
s = n = e = i = ""
try:
    s, n, e, i = string.split(container_name, ".", 4)
except ValueError:
    print container_name, "is not a valid service"

if s == "service" and e != "":
    if e != "prod":
        n = n + "-" + e
    client.write("/vulcand/backends/"+n+"/backend", "{\"Type\": \"http\"}")
    client.write("/vulcand/frontends/"+n+"/frontend", "{\"Type\": \"http\", \"BackendId\": \""+n+"\", \"Route\": \"Host(`"+n+".service.ordermygear.com`)\"}")
    client.write("/vulcand/backends/"+n+"/servers/{{printf "%.*s" 12 $value.ID}}", "{\"URL\": \"http://{{ $address.IP }}:{{ $address.HostPort }}\"}", ttl=10)

{{ end }}
{{ end }}
{{end}}
{{end}}
